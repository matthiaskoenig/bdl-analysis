plot(time_pts, y1, col="blue", pch=16, type="o", ylim=c(0, max(max(y1), max(y2))),
main = "y1, y2", xlab="values", ylab="time")
points(time_pts, y2, col="red", pch=15, type="o")
par(mfrow=c(1,1))
# simple correlation values
cor(x=x1,y=x2, method='spearman') # 0.667
cor(x=x1,y=x2, method='pearson') # 0.439
# YS1
ys1(x1, x2, time_pts)
ys1(x1, x2, time_pts) == 0.583
ys1(y1, y2, time_pts)
ys1(y1, y2, time_pts) == 0.833
# TODO: YR1 values
# yr1(x1, x2, time_pts)
# yr1(x1, x2, time_pts) == 0.555
# yr1(y1, y2, time_pts)
# yr1(y1, y2, time_pts) == 0.805
# Calculate ys1 for a given data frame
ys1.df <- function(data, time_pts, use="pairwise.complete.obs"){
N <- ncol(data)
cor.mat <- matrix(NA, nrow=N, ncol=N)
for (k in 1:N){
for (i in 1:N){
cor.mat[k,i] = ys1(data[,k], data[,i], samples$time)
}
}
return(cor.mat)
}
cor.ys1 <- ys1.df(data, time, use="pairwise.complete.obs")
ys1 = function(a,b,time_pts, w1=0.50, w2=0.25, w3=0.25, use="pairwise.complete.obs"){
na.method <- pmatch(use, c("all.obs", "pairwise.complete.obs")
if (is.na(na.method))
stop("invalid 'use' argument")
# handle the NAs
if (na.method == pairwise.complete.obs){
df <- data.frame(a, b, time_pts)
df <- df[complete.cases(df),]
a <- df$a
b <- df$b
time_pts <- df$time_pts
}
r = (w1 * ys1_fS_star(a,b)) + (w2 * ys1_fA(a,b,time_pts)) + (w3 * ys1_fM(a,b))
return(r)
}
ys1 = function(a,b,time_pts, w1=0.50, w2=0.25, w3=0.25, use="pairwise.complete.obs"){
na.method <- pmatch(use, c("all.obs", "pairwise.complete.obs"))
if (is.na(na.method)){
stop("invalid 'use' argument")
}
# handle the NAs
if (na.method == pairwise.complete.obs){
df <- data.frame(a, b, time_pts)
df <- df[complete.cases(df),]
a <- df$a
b <- df$b
time_pts <- df$time_pts
}
r = (w1 * ys1_fS_star(a,b)) + (w2 * ys1_fA(a,b,time_pts)) + (w3 * ys1_fM(a,b))
return(r)
}
# Calculate ys1 for a given data frame
ys1.df <- function(data, time_pts, use="pairwise.complete.obs"){
N <- ncol(data)
cor.mat <- matrix(NA, nrow=N, ncol=N)
for (k in 1:N){
for (i in 1:N){
cor.mat[k,i] = ys1(data[,k], data[,i], samples$time)
}
}
return(cor.mat)
}
cor.ys1 <- ys1.df(data, time, use="pairwise.complete.obs")
ys1.df <- function(data, time_pts, use="pairwise.complete.obs"){
N <- ncol(data)
cor.mat <- matrix(NA, nrow=N, ncol=N)
for (k in 1:N){
for (i in 1:N){
cor.mat[k,i] = ys1(data[,k], data[,i], samples$time, use)
}
}
return(cor.mat)
}
cor.ys1 <- ys1.df(data, time, use="pairwise.complete.obs")
ys1.df <- function(data, time_pts, use="pairwise.complete.obs"){
N <- ncol(data)
cor.mat <- matrix(NA, nrow=N, ncol=N)
for (k in 1:N){
for (i in 1:N){
# cor.mat[k,i] = ys1(data[,k], data[,i], samples$time, use)
}
}
return(cor.mat)
}
cor.ys1 <- ys1.df(data, time, use="pairwise.complete.obs")
ys1 = function(a,b,time_pts, w1=0.50, w2=0.25, w3=0.25, use="pairwise.complete.obs"){
na.method <- pmatch(use, c("all.obs", "pairwise.complete.obs"))
if (is.na(na.method)){
stop("invalid 'use' argument")
}
# handle the NAs
if (na.method == "pairwise.complete.obs"){
df <- data.frame(a, b, time_pts)
df <- df[complete.cases(df),]
a <- df$a
b <- df$b
time_pts <- df$time_pts
}
r = (w1 * ys1_fS_star(a,b)) + (w2 * ys1_fA(a,b,time_pts)) + (w3 * ys1_fM(a,b))
return(r)
}
# test data for implementation
# yR1(x1, x2)
time_pts <- seq(0,4)
x1 <- c(2,3,6,4,7)
x2 <- c(1,2,3,5,3)
y1 <- c(4,3,6,2,7)
y2 <- c(5,2,3,1,3)
par(mfrow=c(1,2))
plot(time_pts, x1, col="blue", pch=16, type="o", ylim=c(0, max(max(x1), max(x2))),
main = "x1, x2", xlab="values", ylab="time")
points(time_pts, x2, col="red", pch=15, type="o")
plot(time_pts, y1, col="blue", pch=16, type="o", ylim=c(0, max(max(y1), max(y2))),
main = "y1, y2", xlab="values", ylab="time")
points(time_pts, y2, col="red", pch=15, type="o")
par(mfrow=c(1,1))
# simple correlation values
cor(x=x1,y=x2, method='spearman') # 0.667
cor(x=x1,y=x2, method='pearson') # 0.439
# YS1
ys1(x1, x2, time_pts)
ys1(x1, x2, time_pts) == 0.583
ys1(y1, y2, time_pts)
ys1(y1, y2, time_pts) == 0.833
# TODO: YR1 values
# yr1(x1, x2, time_pts)
# yr1(x1, x2, time_pts) == 0.555
# yr1(y1, y2, time_pts)
# yr1(y1, y2, time_pts) == 0.805
# Calculate ys1 for a given data frame
ys1.df <- function(data, time_pts, use="pairwise.complete.obs"){
N <- ncol(data)
cor.mat <- matrix(NA, nrow=N, ncol=N)
for (k in 1:N){
for (i in 1:N){
cor.mat[k,i] = ys1(data[,k], data[,i], samples$time, use=use)
}
}
return(cor.mat)
}
cor.ys1 <- ys1.df(data, time, use="pairwise.complete.obs")
ys1 = function(a,b,time_pts, w1=0.50, w2=0.25, w3=0.25, use="pairwise.complete.obs"){
na.method <- pmatch(use, c("all.obs", "pairwise.complete.obs"))
if (is.na(na.method)){
stop("invalid 'use' argument")
}
# handle the NAs
if (na.method == "pairwise.complete.obs"){
df <- data.frame(a, b, time_pts)
df <- df[complete.cases(df),]
a <- df$a
b <- df$b
time_pts <- df$time_pts
}
print(a)
print(b)
print(time_pts)
print("---------------")
r = (w1 * ys1_fS_star(a,b)) + (w2 * ys1_fA(a,b,time_pts)) + (w3 * ys1_fM(a,b))
return(r)
}
# test data for implementation
# yR1(x1, x2)
time_pts <- seq(0,4)
x1 <- c(2,3,6,4,7)
x2 <- c(1,2,3,5,3)
y1 <- c(4,3,6,2,7)
y2 <- c(5,2,3,1,3)
par(mfrow=c(1,2))
plot(time_pts, x1, col="blue", pch=16, type="o", ylim=c(0, max(max(x1), max(x2))),
main = "x1, x2", xlab="values", ylab="time")
points(time_pts, x2, col="red", pch=15, type="o")
plot(time_pts, y1, col="blue", pch=16, type="o", ylim=c(0, max(max(y1), max(y2))),
main = "y1, y2", xlab="values", ylab="time")
points(time_pts, y2, col="red", pch=15, type="o")
par(mfrow=c(1,1))
# simple correlation values
cor(x=x1,y=x2, method='spearman') # 0.667
cor(x=x1,y=x2, method='pearson') # 0.439
# YS1
ys1(x1, x2, time_pts)
ys1(x1, x2, time_pts) == 0.583
ys1(y1, y2, time_pts)
ys1(y1, y2, time_pts) == 0.833
# TODO: YR1 values
# yr1(x1, x2, time_pts)
# yr1(x1, x2, time_pts) == 0.555
# yr1(y1, y2, time_pts)
# yr1(y1, y2, time_pts) == 0.805
# Calculate ys1 for a given data frame
ys1.df <- function(data, time_pts, use="pairwise.complete.obs"){
N <- ncol(data)
cor.mat <- matrix(NA, nrow=N, ncol=N)
for (k in 1:N){
for (i in 1:N){
cor.mat[k,i] = ys1(data[,k], data[,i], samples$time, use=use)
}
}
return(cor.mat)
}
cor.ys1 <- ys1.df(data, time, use="pairwise.complete.obs")
ys1 = function(a,b,time_pts, w1=0.50, w2=0.25, w3=0.25, use="pairwise.complete.obs"){
na.method <- pmatch(use, c("all.obs", "pairwise.complete.obs"))
if (is.na(na.method)){
stop("invalid 'use' argument")
}
# handle the NAs
if (na.method == "pairwise.complete.obs"){
df <- data.frame(a, b, time_pts)
df <- df[complete.cases(df),]
a <- df$a
b <- df$b
time_pts <- df$time_pts
}
print("---------------")
print(a)
print(b)
print(time_pts)
r = (w1 * ys1_fS_star(a,b)) + (w2 * ys1_fA(a,b,time_pts)) + (w3 * ys1_fM(a,b))
return(r)
}
# test data for implementation
# yR1(x1, x2)
time_pts <- seq(0,4)
x1 <- c(2,3,6,4,7)
x2 <- c(1,2,3,5,3)
y1 <- c(4,3,6,2,7)
y2 <- c(5,2,3,1,3)
par(mfrow=c(1,2))
plot(time_pts, x1, col="blue", pch=16, type="o", ylim=c(0, max(max(x1), max(x2))),
main = "x1, x2", xlab="values", ylab="time")
points(time_pts, x2, col="red", pch=15, type="o")
plot(time_pts, y1, col="blue", pch=16, type="o", ylim=c(0, max(max(y1), max(y2))),
main = "y1, y2", xlab="values", ylab="time")
points(time_pts, y2, col="red", pch=15, type="o")
par(mfrow=c(1,1))
# simple correlation values
cor(x=x1,y=x2, method='spearman') # 0.667
cor(x=x1,y=x2, method='pearson') # 0.439
# YS1
ys1(x1, x2, time_pts)
ys1(x1, x2, time_pts) == 0.583
ys1(y1, y2, time_pts)
ys1(y1, y2, time_pts) == 0.833
# TODO: YR1 values
# yr1(x1, x2, time_pts)
# yr1(x1, x2, time_pts) == 0.555
# yr1(y1, y2, time_pts)
# yr1(y1, y2, time_pts) == 0.805
# Calculate ys1 for a given data frame
ys1.df <- function(data, time_pts, use="pairwise.complete.obs"){
N <- ncol(data)
cor.mat <- matrix(NA, nrow=N, ncol=N)
for (k in 1:N){
for (i in 1:N){
print(k, i)
cor.mat[k,i] = ys1(data[,k], data[,i], samples$time, use=use)
}
}
return(cor.mat)
}
cor.ys1 <- ys1.df(data, time, use="pairwise.complete.obs")
# Calculate ys1 for a given data frame
ys1.df <- function(data, time_pts, use="pairwise.complete.obs"){
N <- ncol(data)
cor.mat <- matrix(NA, nrow=N, ncol=N)
for (k in 1:N){
for (i in 1:N){
print(k)
print(i)
cor.mat[k,i] = ys1(data[,k], data[,i], samples$time, use=use)
}
}
return(cor.mat)
}
cor.ys1 <- ys1.df(data, time, use="pairwise.complete.obs")
data[,143]
names(data)[143]
ys1(a=data[, 1], b=data[,2], time_pts=samples$time, use="pairwise.complete.obs")
ys1(a=data[, 1], b=data[,143], time_pts=samples$time, use="pairwise.complete.obs")
ys1 = function(a,b,time_pts, w1=0.50, w2=0.25, w3=0.25, use="pairwise.complete.obs"){
na.method <- pmatch(use, c("all.obs", "pairwise.complete.obs"))
if (is.na(na.method)){
stop("invalid 'use' argument")
}
# handle the NAs
if (na.method == "pairwise.complete.obs"){
df <- data.frame(a, b, time_pts)
df <- df[complete.cases(df),]
a <- df$a
b <- df$b
time_pts <- df$time_pts
}
print("---------------")
print(a)
print(b)
print(time_pts)
print(length(a))
print(length(b))
print(length(time_pts))
r = (w1 * ys1_fS_star(a,b)) + (w2 * ys1_fA(a,b,time_pts)) + (w3 * ys1_fM(a,b))
return(r)
}
ys1(a=data[, 1], b=data[,143], time_pts=samples$time, use="pairwise.complete.obs")
head(data)
samples
samples$time
library(reshape)
data2 <- data
data2$time <- samples$time
head(data2)
data.melt <- cast(melt(data2),I ~ time, mean)
data.melt <- cast(melt(data2),time ~ variable, mean)
aggregate(data2, by=time, FUN=mean)
aggregate(data2, by=c("time"), FUN=mean)
aggregate(data2, by=["time"], FUN=mean)
aggregate(data2, list("time"), FUN=mean)
aggregate(data2, list(data2$time), FUN=mean)
data.melt <- aggregate(data2, list(data2$time), FUN=mean)
data2.melt <- aggregate(data2, list(data2$time), FUN=mean)
cor.ys1 <- ys1.df(data2.melt, data2.melt$time, use="pairwise.complete.obs")
data2.melt <- aggregate(data2, list(data2$time), FUN=mean)
head(data2.melt)
cor.ys1 <- ys1.df(data2.melt, data2.melt$time, use="pairwise.complete.obs")
ys1.df <- function(data, time_pts, use="pairwise.complete.obs"){
N <- ncol(data)
cor.mat <- matrix(NA, nrow=N, ncol=N)
for (k in 1:N){
for (i in 1:N){
print(k)
print(i)
cor.mat[k,i] = ys1(data[,k], data[,i], time_pts, use=use)
}
}
return(cor.mat)
}
cor.ys1 <- ys1.df(data, time, use="pairwise.complete.obs")
data2.melt <- aggregate(data2, list(data2$time), FUN=mean)
head(data2.melt)
cor.ys1 <- ys1.df(data2.melt, data2.melt$time, use="pairwise.complete.obs")
data2.melt <- data2.melt[-c("time")]
data2.melt <- data2.melt[, -c("time")]
data2.melt <- aggregate(data2, list(data2$time), FUN=mean)
data2.melt <- subset(data2.melt, select = -c(time) )
cor.ys1 <- ys1.df(data2.melt, data2.melt$time, use="pairwise.complete.obs")
library(reshape)
data2 <- data
data2$time <- samples$time
data2.melt <- aggregate(data2, list(data2$time), FUN=mean)
data2.time <- data2.melt$time
data2.melt <- subset(data2.melt, select = -c(time) )
cor.ys1 <- ys1.df(data2.melt, data2.melt$time, use="pairwise.complete.obs")
cor.ys1 <- ys1.df(data2.melt, data2.time, use="pairwise.complete.obs")
data2.melt
data2.melt <- subset(data2.melt, select = -c(time, Group.1) )
cor.ys1 <- ys1.df(data2.melt, data2.time, use="pairwise.complete.obs")
ys1 = function(a,b,time_pts, w1=0.50, w2=0.25, w3=0.25, use="pairwise.complete.obs"){
na.method <- pmatch(use, c("all.obs", "pairwise.complete.obs"))
if (is.na(na.method)){
stop("invalid 'use' argument")
}
# handle the NAs
if (identical(use, "pairwise.complete.obs")){
df <- data.frame(a, b, time_pts)
df <- df[complete.cases(df),]
a <- df$a
b <- df$b
time_pts <- df$time_pts
}
print("---------------")
print(a)
print(b)
print(time_pts)
print(length(a))
print(length(b))
print(length(time_pts))
r = (w1 * ys1_fS_star(a,b)) + (w2 * ys1_fA(a,b,time_pts)) + (w3 * ys1_fM(a,b))
return(r)
}
library(reshape)
data2 <- data
data2$time <- samples$time
data2.melt <- aggregate(data2, list(data2$time), FUN=mean)
data2.time <- data2.melt$time
data2.melt <- subset(data2.melt, select = -c(time, Group.1) )
cor.ys1 <- ys1.df(data2.melt, data2.time, use="pairwise.complete.obs")
corrplot(cor.ys1, order="original", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
library(corrplot)
corrplot(cor.ys1, order="original", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
colnames(coy.ys1) <- names(data2.melt)
colnames(col.ys1) <- names(data2.melt)
colnames(cor.ys1) <- names(data2.melt)
corrplot(2*cor.ys1-1, order="original", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
corrplot(2*(cor.ys1-0.5), order="original", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
summary( 2*(cor.ys1-0.5) )
colnames(cor.ys1) <- names(data2.melt)
cor.ys1.scaled <- 2*(cor.ys1-0.5)
corrplot(cor.ys1.scaled), order="original", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
corrplot(cor.ys1.scaled, order="original", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
colnames(cor.ys1) <- names(data2.melt)
rownames(cor.ys1) <- names(data2.melt)
cor.ys1.scaled <- 2*(cor.ys1-0.5)
corrplot(cor.ys1.scaled, order="original", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
corrplot(cor.ys1.scaled, order="original", order="hclust", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
corrplot(cor.ys1.scaled, order="hclust", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
png(filename="../results/cor.ys1-scaled_original.png", width=options$width, height=options$height,
res=options$res)
corrplot(cor.ys1.scaled, order="original", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
dev.off()
png(filename="../results/cor.ys1-scaled_hclust.png", width=options$width, height=options$height,
res=options$res)
corrplot(cor.ys1.scaled, order="hclust", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
dev.off()
ys1 = function(a,b,time_pts, w1=0.50, w2=0.25, w3=0.25, use="pairwise.complete.obs"){
na.method <- pmatch(use, c("all.obs", "pairwise.complete.obs"))
if (is.na(na.method)){
stop("invalid 'use' argument")
}
# handle the NAs
if (identical(use, "pairwise.complete.obs")){
df <- data.frame(a, b, time_pts)
df <- df[complete.cases(df),]
a <- df$a
b <- df$b
time_pts <- df$time_pts
}
r = (w1 * ys1_fS_star(a,b)) + (w2 * ys1_fA(a,b,time_pts)) + (w3 * ys1_fM(a,b))
return(r)
}
# Calculate ys1 for a given data frame
ys1.df <- function(data, time_pts, use="pairwise.complete.obs"){
N <- ncol(data)
cor.mat <- matrix(NA, nrow=N, ncol=N)
colnames(cor.mat) <- names(data)
rownames(cor.mat) <- names(data)
for (k in 1:N){
for (i in 1:N){
cor.mat[k,i] = ys1(data[,k], data[,i], time_pts, use=use)
}
}
return(cor.mat)
}
cor.ys1 <- ys1.df(data, time, use="pairwise.complete.obs")
library(reshape)
data2 <- data
data2$time <- samples$time
data2.melt <- aggregate(data2, list(data2$time), FUN=mean)
data2.time <- data2.melt$time
data2.melt <- subset(data2.melt, select = -c(time, Group.1) )
cor.ys1 <- ys1.df(data2.melt, data2.time, use="pairwise.complete.obs")
options$width=1600
options$height=1600
options$res=200
library(corrplot)
cor.ys1.scaled <- 2*(cor.ys1-0.5)
png(filename="../results/cor.ys1-scaled_original.png", width=options$width, height=options$height,
res=options$res)
corrplot(cor.ys1.scaled, order="original", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
png(filename="../results/cor.ys1-scaled_hclust.png", width=options$width, height=options$height,
res=options$res)
corrplot(cor.ys1.scaled, order="hclust", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
dev.off()
png(filename="../results/cor.ys1-scaled_original.png", width=options$width, height=options$height,
res=options$res)
corrplot(cor.ys1.scaled, order="original", method="square", type="full",
tl.cex=0.3, tl.col="black", # label settings
)
dev.off()
ys1(data2.melt$Actb, data2.melt$Act.B.x, data2.time, use=use)
ys1(data2.melt$Actb, data2.melt$Act.B.x, data2.time, use="pairwise.complete.obs")
ys1(data2.melt$Actb, data2.melt$Act.B.x, data2.time, use="pairwise.complete.obs")
ys1(data2.melt$Actb, data2.melt$Act.B.y, data2.time, use="pairwise.complete.obs")
ys1(data2.melt$Act.B.x, data2.melt$Act.B.y, data2.time, use="pairwise.complete.obs")
print('----')
ys1(data2.melt$Actb, data2.melt$Act.B.x, data2.time, use="pairwise.complete.obs")
ys1(data2.melt$Actb, data2.melt$Act.B.y, data2.time, use="pairwise.complete.obs")
ys1(data2.melt$Act.B.x, data2.melt$Act.B.y, data2.time, use="pairwise.complete.obs")
